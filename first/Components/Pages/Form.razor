@page "/Form"
@rendermode InteractiveServer

<style>
    body {
        transition: all .7s ease-in-out;
        background-color:
    @BGC
            !important;
        color: @TC !important;
    }

    .gapI {
        margin-left: 20vw;
        margin-bottom: 10vw;
        display: flex;
        flex-direction: column;
        width: 20vw;
        border-radius: 10vw;
        gap: 10px;
        text-align: center;
        transition: all 1s ease-in-out;
    }

    .gapII {
        text-align: center;
        transition: all 1s ease-in-out;
        border-radius: 10vw;
        border: none;
        padding: .5vw;
    }

    .holdShow {
        columns: 2;
        row-gap: 10vw !important;
        transition: all 1s ease-in-out;
    }

    .show {
        padding: 1.2vw;
        background-color: #3f3a3a;
        border-radius: 10vw;
        margin: 3vw;
        display: flex;
        justify-content: space-between;
        transition: all 1s ease-in-out;
    }

    .clear {
        border-radius: 10vw;
        padding: .7vw;
        transition: all 1s ease-in-out;
    }

    .textAlign {
        border-radius: 10vw;
        text-align: center;
        background-color: #ffffff3f;
        padding: .7vw;
        transition: all 1s ease-in-out;
    }

    .wiDh {
        width: 25vw;
        margin-left: -2vw;
    }

    .selectI {}
</style>

<h1>TODO @counter</h1>
<form class="gapI">
    <label class="gapII" for="">Enter work TODO do: </label>
    <input class="gapII" type="text" @bind="addTodoList">
    <button class="btn-primary gapII wiDh" @onclick="enter">Enter</button>
</form>
@* <button class="clear btn-danger" @onclick="clear">clear</button> *@
<ul class="holdShow">
    @foreach (string i in names)
    {
        <li class="show">
            <span class="textAlign">@i</span>
            @* <button class="clear btn-danger" @onclick="clear">clear</button> *@
            <button class="clear btn-danger" @onclick="()=>clear(i)">clear</button>
            @* <input class="selectI" type="checkbox"> *@
        </li>
    }
</ul>


@code {
    string BGC = "black";
    string TC = "white";
    static string addTodoList = "üòò";
    static List<string> names = new List<string>() { };
    @* private List<Todo> *@
    int counter = 0;
    void enter()
    {
        names.Add(addTodoList);
        addTodoList = "üòç";
        counter += 1;
    }
    void clear(string addTodoList)
    {
        @* string i = string.Empty; *@
        names.Remove(addTodoList);
    }
}